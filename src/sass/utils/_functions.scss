@function rem($size) {
	@return ($size / $base-font) * '1rem';
}

$parent-columns: $grid-columns !default;
$fg-column: $column;
$fg-gutter: $gutter;
$fg-max-columns: $grid-columns;
$container-display-table: false !default;
$layout-direction: LTR !default;
$gw-gutter: $gutter;
$gw-column: 12em;

@function flex-grid($columns, $container-columns: $fg-max-columns) {
	$width: $columns * $fg-column + ($columns - 1) * $fg-gutter;
	$container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
	@return percentage($width / $container-width);
}

@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {
	$container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
	@return percentage($gutter / $container-width);
}

@function grid-width($n) {
	@return $n * $gw-column + ($n - 1) * $gw-gutter;
}

@function get-parent-columns($columns) {
	@if $columns != $grid-columns {
		$parent-columns: $columns !global;
	} @else {
		$parent-columns: $grid-columns !global;
	}

	@return $parent-columns;
}

@function is-display-table($container-is-display-table, $display) {
	@return $container-is-display-table == true or $display == table;
}


@function gradient-stops($grid-columns, $color: $visual-grid-color) {
	$transparent: transparent;

	$column-width: flex-grid(1, $grid-columns);
	$gutter-width: flex-gutter($grid-columns);
	$column-offset: $column-width;

	$values: ($transparent 0, $color 0);

	@for $i from 1 to $grid-columns*2 {
		@if is-even($i) {
			$values: append($values, $transparent $column-offset, comma);
			$values: append($values, $color $column-offset, comma);
			$column-offset: $column-offset + $column-width;
		} @else {
			$values: append($values, $color $column-offset, comma);
			$values: append($values, $transparent $column-offset, comma);
			$column-offset: $column-offset + $gutter-width;
		}
	}

	@return $values;
}
